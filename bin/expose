#!/bin/bash

function dkHelp () {
  echo "Dockerizer command: expose"
  echo
  echo "(Drops a container shell)."
  echo "By default connects to the php container if you do not specify any other. But if you want to connect to another container like the DB one just type expose mariadb."
  echo "If you want to enter as root just add --root: expose apache --root."
  echo
  echo "Available containers are:"
  echo
  echo "    php (by default)"
  echo "    mariadb (mysql)"
  echo "    apache"
  echo "    frontend"
  echo
  echo "Usage"
  echo "expose                drops a shell of php (default)"
  echo "expose apache         drops a shell of apache"
  echo "expose apache --root  drops a root shell of apache"
}

case "$1" in
  --dkhelp)
    dkHelp
    exit
    ;;
esac

bin_path="`dirname $0`"
root_dir="$( cd $bin_path && cd .. && pwd)"
relative_path=${PWD#$root_dir}
user_uid=1000

if [[ "$OSTYPE" == "darwin"* ]]; then
    user_uid=501
fi

# Load project specific variables.
set -o allexport
source "${bin_path}/../.env"
set +o allexport

# Check the provided arguments and set the variables.
if [ "$#" -eq  "0" ]
  then
    #  "expose"
    container_base_name="php"
  else

    if [ $1 = "--root" ]; then
        #  "expose --root"
        user_uid=0
        container_base_name="php"
    else
        #  "expose php"
        container_base_name=$1
    fi

    if [ ! -z "$2" ] && [ $2 = "--root" ]; then
        #  "expose php --root"
        user_uid=0
        container_base_name=$1
    fi

fi


# If we received a first argument means the user wants to reach a
# different container than "php" and since we can't predict the
# location we just send it to the root filesystem.
if [ "$#" -eq  "0" ]
  then
    workdir="/var/www/html$relative_path"
  else
    workdir="/"
fi


container=$PROJECT_NAME
container+="_$container_base_name"

echo -e "Entering to \e[32m$container\e[0m container"
docker exec -it --privileged --user $user_uid:$user_uid --workdir $workdir $container /bin/bash
